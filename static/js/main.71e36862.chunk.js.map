{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","className","alt","src","this","props","id","name","email","React","Component","CardList","robots","map","user","i","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflow","height","children","App","onsearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","filterRobots","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCSCQ,E,4JAbX,WACI,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BC,KAAKC,MAAMC,GAArC,mBACrB,6BAAKF,KAAKC,MAAME,OAChB,4BACKH,KAAKC,MAAMG,e,GAPbC,IAAMC,WCaVC,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAO,cAAC,EAAD,CAAyBR,KAAMK,EAAOG,GAAGR,KAAMD,GAAIM,EAAOG,GAAGT,GAAIE,MAAOI,EAAOG,GAAGP,OAAvEI,EAAOG,GAAGT,UCEjCU,E,4JAPX,WACI,OACI,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUf,KAAKC,MAAMe,mB,GAH1DX,IAAMC,WCUfW,E,4JATX,WACI,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,SAAtC,SACKpB,KAAKC,MAAMoB,e,GAJPhB,IAAMC,WCuCZgB,E,kDAnCX,aACC,IAAD,8BACI,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAZxC,EAAKC,MAAM,CACPrB,OAAO,GACPkB,YAAY,IAJpB,E,qDAQA,WACC,IAAD,OACII,MAAM,8CAA8CxC,MAAK,SAAAyC,GAAQ,OAAEA,EAASC,UAAQ1C,MAAK,SAAA2C,GAAK,OAAE,EAAKR,SAAS,CAACjB,OAAOyB,S,oBAO1H,WACC,IAAD,OACUC,EAAalC,KAAK6B,MAAMrB,OAAO2B,QAAO,SAAA3B,GACxC,OAAOA,EAAOL,KAAKiC,cAAcC,SAAS,EAAKR,MAAMH,YAAYU,kBAErE,OACI,sBAAKvC,UAAU,KAAf,UACA,8CACA,cAAC,EAAD,CAAWmB,aAAchB,KAAKuB,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,OAAQ0B,a,GA7BhB7B,IAAMC,W,YCExBgC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MACgBC,SAASC,eAAe,SAKhDvD,M","file":"static/js/main.71e36862.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='tc dib bg-light-green br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img alt='robots' src={`https://robohash.org/${this.props.id}?size=200x200`} />\r\n                <h2>{this.props.name}</h2>\r\n                <p>\r\n                    {this.props.email}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return <Card key={robots[i].id} name={robots[i].name} id={robots[i].id} email={robots[i].email}/>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nclass SearchBox extends React.Component {\r\n    render() {\r\n        return (\r\n            <input type='search' placeholder='Search Robots' onChange={this.props.searchChange}/> \r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nclass Scroll extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{overflow:'scroll',height:'500px'}}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scroll ","import React from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\n\r\nclass App extends React.Component {\r\n    constructor ()\r\n    {\r\n        super();\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount () \r\n    {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(response=>response.json()).then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n    onsearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value});\r\n    }\r\n\r\n    render() \r\n    {\r\n        const filterRobots=this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        return (\r\n            <div className='tc'>\r\n            <h1> Robofriends</h1>\r\n            <SearchBox searchChange={this.onsearchChange}/>\r\n            <Scroll>\r\n                <CardList robots={filterRobots}/>\r\n            </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './index.css';\nimport 'tachyons';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}